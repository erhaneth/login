{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWindowFromNode = getWindowFromNode;\nexports.getDocument = getDocument;\nexports.runWithRealTimers = runWithRealTimers;\nexports.checkContainerType = checkContainerType;\nexports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled;\nexports.TEXT_NODE = exports.setTimeout = exports.setImmediate = exports.clearTimeout = void 0;\nconst globalObj = typeof window === 'undefined' ? global : window; // Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\n\nconst TEXT_NODE = 3; // Currently this fn only supports jest timers, but it could support other test runners in the future.\n\nexports.TEXT_NODE = TEXT_NODE;\nfunction runWithRealTimers(callback) {\n  return hasJestTimers() ? runWithJestRealTimers(callback).callbackReturnValue :\n  // istanbul ignore next\n  callback();\n}\nfunction hasJestTimers() {\n  return typeof jest !== 'undefined' && jest !== null && typeof jest.useRealTimers === 'function';\n}\nfunction runWithJestRealTimers(callback) {\n  const timerAPI = {\n    clearInterval,\n    clearTimeout,\n    setInterval,\n    setTimeout\n  }; // For more on why we have the check here,\n  // checkout https://github.com/testing-library/dom-testing-library/issues/914\n\n  if (typeof setImmediate === 'function') {\n    timerAPI.setImmediate = setImmediate;\n  }\n  if (typeof clearImmediate === 'function') {\n    timerAPI.clearImmediate = clearImmediate;\n  }\n  jest.useRealTimers();\n  const callbackReturnValue = callback();\n  const usedFakeTimers = Object.entries(timerAPI).some(_ref => {\n    let [name, func] = _ref;\n    return func !== globalObj[name];\n  });\n  if (usedFakeTimers) {\n    var _timerAPI$setTimeout;\n    jest.useFakeTimers((_timerAPI$setTimeout = timerAPI.setTimeout) != null && _timerAPI$setTimeout.clock ? 'modern' : 'legacy');\n  }\n  return {\n    callbackReturnValue,\n    usedFakeTimers\n  };\n}\nfunction jestFakeTimersAreEnabled() {\n  return hasJestTimers() ? runWithJestRealTimers(() => {}).usedFakeTimers :\n  // istanbul ignore next\n  false;\n} // we only run our tests in node, and setImmediate is supported in node.\n// istanbul ignore next\n\nfunction setImmediatePolyfill(fn) {\n  return globalObj.setTimeout(fn, 0);\n}\nfunction getTimeFunctions() {\n  // istanbul ignore next\n  return {\n    clearTimeoutFn: globalObj.clearTimeout,\n    setImmediateFn: globalObj.setImmediate || setImmediatePolyfill,\n    setTimeoutFn: globalObj.setTimeout\n  };\n}\nconst {\n  clearTimeoutFn,\n  setImmediateFn,\n  setTimeoutFn\n} = runWithRealTimers(getTimeFunctions);\nexports.setTimeout = setTimeoutFn;\nexports.setImmediate = setImmediateFn;\nexports.clearTimeout = clearTimeoutFn;\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n  return window.document;\n}\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.then instanceof Function) {\n    throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \\`fireEvent.click(screen.findBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`, or await the findBy query \\`fireEvent.click(await screen.findBy...\\`?`);\n  } else if (Array.isArray(node)) {\n    throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \\`fireEvent.click(screen.getAllBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`?`);\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(`It looks like you passed a \\`screen\\` object. Did you do something like \\`fireEvent.click(screen, ...\\` when you meant to use a query, e.g. \\`fireEvent.click(screen.getBy..., \\`?`);\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(`Unable to find the \"window\" object for the given node. Please file an issue with the code that's causing you to see this error: https://github.com/testing-library/dom-testing-library/issues/new`);\n  }\n}\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);\n  }\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n    return typeof object;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getWindowFromNode","getDocument","runWithRealTimers","checkContainerType","jestFakeTimersAreEnabled","TEXT_NODE","setTimeout","setImmediate","clearTimeout","globalObj","window","global","callback","hasJestTimers","runWithJestRealTimers","callbackReturnValue","jest","useRealTimers","timerAPI","clearInterval","setInterval","clearImmediate","usedFakeTimers","entries","some","_ref","name","func","_timerAPI$setTimeout","useFakeTimers","clock","setImmediatePolyfill","fn","getTimeFunctions","clearTimeoutFn","setImmediateFn","setTimeoutFn","Error","document","node","defaultView","ownerDocument","then","Function","Array","isArray","debug","logTestingPlaygroundURL","container","querySelector","querySelectorAll","TypeError","getTypeName","object","constructor"],"sources":["/Users/heg/Desktop/react-class/login/node_modules/@testing-library/dom/dist/helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWindowFromNode = getWindowFromNode;\nexports.getDocument = getDocument;\nexports.runWithRealTimers = runWithRealTimers;\nexports.checkContainerType = checkContainerType;\nexports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled;\nexports.TEXT_NODE = exports.setTimeout = exports.setImmediate = exports.clearTimeout = void 0;\nconst globalObj = typeof window === 'undefined' ? global : window; // Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\n\nconst TEXT_NODE = 3; // Currently this fn only supports jest timers, but it could support other test runners in the future.\n\nexports.TEXT_NODE = TEXT_NODE;\n\nfunction runWithRealTimers(callback) {\n  return hasJestTimers() ? runWithJestRealTimers(callback).callbackReturnValue : // istanbul ignore next\n  callback();\n}\n\nfunction hasJestTimers() {\n  return typeof jest !== 'undefined' && jest !== null && typeof jest.useRealTimers === 'function';\n}\n\nfunction runWithJestRealTimers(callback) {\n  const timerAPI = {\n    clearInterval,\n    clearTimeout,\n    setInterval,\n    setTimeout\n  }; // For more on why we have the check here,\n  // checkout https://github.com/testing-library/dom-testing-library/issues/914\n\n  if (typeof setImmediate === 'function') {\n    timerAPI.setImmediate = setImmediate;\n  }\n\n  if (typeof clearImmediate === 'function') {\n    timerAPI.clearImmediate = clearImmediate;\n  }\n\n  jest.useRealTimers();\n  const callbackReturnValue = callback();\n  const usedFakeTimers = Object.entries(timerAPI).some(([name, func]) => func !== globalObj[name]);\n\n  if (usedFakeTimers) {\n    var _timerAPI$setTimeout;\n\n    jest.useFakeTimers((_timerAPI$setTimeout = timerAPI.setTimeout) != null && _timerAPI$setTimeout.clock ? 'modern' : 'legacy');\n  }\n\n  return {\n    callbackReturnValue,\n    usedFakeTimers\n  };\n}\n\nfunction jestFakeTimersAreEnabled() {\n  return hasJestTimers() ? runWithJestRealTimers(() => {}).usedFakeTimers : // istanbul ignore next\n  false;\n} // we only run our tests in node, and setImmediate is supported in node.\n// istanbul ignore next\n\n\nfunction setImmediatePolyfill(fn) {\n  return globalObj.setTimeout(fn, 0);\n}\n\nfunction getTimeFunctions() {\n  // istanbul ignore next\n  return {\n    clearTimeoutFn: globalObj.clearTimeout,\n    setImmediateFn: globalObj.setImmediate || setImmediatePolyfill,\n    setTimeoutFn: globalObj.setTimeout\n  };\n}\n\nconst {\n  clearTimeoutFn,\n  setImmediateFn,\n  setTimeoutFn\n} = runWithRealTimers(getTimeFunctions);\nexports.setTimeout = setTimeoutFn;\nexports.setImmediate = setImmediateFn;\nexports.clearTimeout = clearTimeoutFn;\n\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n\n  return window.document;\n}\n\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.then instanceof Function) {\n    throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \\`fireEvent.click(screen.findBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`, or await the findBy query \\`fireEvent.click(await screen.findBy...\\`?`);\n  } else if (Array.isArray(node)) {\n    throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \\`fireEvent.click(screen.getAllBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`?`);\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(`It looks like you passed a \\`screen\\` object. Did you do something like \\`fireEvent.click(screen, ...\\` when you meant to use a query, e.g. \\`fireEvent.click(screen.getBy..., \\`?`);\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(`Unable to find the \"window\" object for the given node. Please file an issue with the code that's causing you to see this error: https://github.com/testing-library/dom-testing-library/issues/new`);\n  }\n}\n\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);\n  }\n\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n\n    return typeof object;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}